ASTHETICS:
Add confetti after registration feature

fonts: "sohne-var","Helvetica Neue","Arial",sans-serif

SECURITY:
Add max attempts for validating OTP (3) - Then flag account (Unusual activity)
Transaction can only be initiated and completed from one device
Transaction can be cancelled from any device
CAPTCHA
Enforce an expiry on passwords, after which a user must change their password also log all previous passwords so it's not reusable 
Test if you can onboard with online SMS Service number

OTHER
Save transaction funding source data e.g Card last 4, BIN, Bank (Table already created)
Add customer code to transactions table
Validate input types for transactions using changesets
Add hidden togglable options to save card and new contact
Accept terms and conditions
Duplicate misisdn on database redis and real DB
Format amount input in frontend
generating Statements
Run with docker
Add customer ref to withdrawals
Option to add new bank account from withdrawal page
Add currency to transactions table
Make onboarding password field togglable
resend OTP while onboarding

THINK OF:
How to validate email for notifications. (I implememted this via apilayer but its not accurate/reliable)
Integrating with Whatsapp API






  # TODO sanitize message body using plug
  # TODO: mainenance mode plug
  # TODO: Trim emojis and others
  # TODO: Messages to lowercase

  # def test(url) do
  #   {:ok, %HTTPoison.Response{body: body}} =
  #     HTTPoison.get(
  #       url,
  #       [],
  #       follow_redirect: true
  #     )

  #   # "BEGIN:VCARD\r\nVERSION:3.0\r\nPRODID:ez-vcard 0.10.6\r\nFN:Feyi Abioye\r\nN:Abioye;Feyi\r\nORG:\r\nTEL;TYPE=cell:+234 807 909 7910\r\nTEL;TYPE=home:+234 807 909 7911\r\nEND:VCARD\r"
  #   contact_data =
  #     body
  #     |> String.split("\r\n")

  #   contact_name =
  #     contact_data
  #     |> Enum.filter(fn index -> String.starts_with?(index, "FN:") end)
  #     |> Enum.map(fn index ->
  #       [_fn | [name]] = String.split(index, ":")
  #       name
  #     end)

  #   tel_numbers =
  #     contact_data
  #     |> Enum.filter(fn index -> String.starts_with?(index, "TEL") end)
  #     |> Enum.map(fn index ->
  #       [_useless | [msisdn]] = String.split(index, ":")

  #       msisdn
  #       |> String.replace(~r/\s+/, "")
  #     end)

  #   [name] = contact_name

  #   %{
  #     name: name,
  #     tels: tel_numbers
  #   }
  # end

  # def index(conn, %{"WaId" => msisdn} = params) do
  #   email = "majirieyowel@gmail.com"
  #   profile_name = "Mj"

  #   message = ~s"""
  #   Almost done #{profile_name}, \n
  #   A verification link has been sent to your email: *#{email}* \r
  #   Please verify your email so we know it's you. \n
  #   (_respond with number_)
  #   1. Resend verification link \r
  #   2. Use another email \r
  #   """
  #   Mobupay.Services.Twilio.send_whatsapp(msisdn, message)

  #   conn
  #   |> put_status(:ok)
  #   |> put_resp_content_type("application/json")
  #   |> json(%{
  #     status: "ok"
  #   })
  # end